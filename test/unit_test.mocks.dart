// Mocks generated by Mockito 5.0.16 from annotations
// in authentication_frontend/test/unit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:authentication_frontend/requester/requester.dart' as _i3;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeFlutterSecureStorage_0 extends _i1.Fake
    implements _i2.FlutterSecureStorage {}

/// A class which mocks [Requester].
///
/// See the documentation for Mockito's code generation for more information.
class MockRequester extends _i1.Mock implements _i3.Requester {
  MockRequester() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get uri =>
      (super.noSuchMethod(Invocation.getter(#uri), returnValue: '') as String);
  @override
  set uri(String? _uri) => super.noSuchMethod(Invocation.setter(#uri, _uri),
      returnValueForMissingStub: null);
  @override
  Map<String, String> get headers =>
      (super.noSuchMethod(Invocation.getter(#headers),
          returnValue: <String, String>{}) as Map<String, String>);
  @override
  set headers(Map<String, String>? _headers) =>
      super.noSuchMethod(Invocation.setter(#headers, _headers),
          returnValueForMissingStub: null);
  @override
  _i2.FlutterSecureStorage get storage => (super.noSuchMethod(
      Invocation.getter(#storage),
      returnValue: _FakeFlutterSecureStorage_0()) as _i2.FlutterSecureStorage);
  @override
  _i4.Future<void> loginRequester(String? name, String? password) =>
      (super.noSuchMethod(Invocation.method(#loginRequester, [name, password]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> signUpRequester(String? name, String? password) =>
      (super.noSuchMethod(Invocation.method(#signUpRequester, [name, password]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<String> helloRequester() =>
      (super.noSuchMethod(Invocation.method(#helloRequester, []),
          returnValue: Future<String>.value('')) as _i4.Future<String>);
  @override
  _i4.Future<void> refreshTokenRequester() =>
      (super.noSuchMethod(Invocation.method(#refreshTokenRequester, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> logoutRequester() =>
      (super.noSuchMethod(Invocation.method(#logoutRequester, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}
